---
import type { PostMeta } from "@/lib/blog/types"
import FormattedDate from "@/components/base/FormattedDate.astro"
import Icon from "@/components/base/Icon.astro"
import Link from "@/components/base/Link.astro"
import ReadingTime from "@/components/base/ReadingTime.astro"

import AuthorAvatar from "./AuthorAvatar.astro"

interface Props {
  metadata: PostMeta
  variant: "card" | "full"
  class?: string
}

const { metadata, variant = "full", class: className } = Astro.props

const wordCount =
  metadata.hasSubposts && metadata.combinedWordCount
    ? metadata.combinedWordCount
    : metadata.wordCount

const isCard = variant === "card"
---

<div
  id="post-metadata"
  class:list={[
    "text-muted-foreground flex items-center gap-x-3 gap-y-2 text-sm",
    isCard ? "meta-card flex-wrap" : "flex-col justify-center sm:flex-row",
    className
  ]}
>
  {
    metadata.authors.length > 0 && (
      <div class="flex items-center gap-1.5">
        {metadata.authors.map((author) => (
          <div class="flex items-center gap-1">
            <AuthorAvatar author={author} class="size-5" />
            {isCard ? (
              <span>{author.name}</span>
            ) : (
              <Link href={`/authors/${author.id}`} underline class="text-foreground">
                {author.name}
              </Link>
            )}
          </div>
        ))}
      </div>
    )
  }

  <div class="flex items-center gap-1">
    <Icon name="publish" title="Published" />
    <FormattedDate date={metadata.createdAt} />
  </div>

  {
    metadata.updatedAt && (
      <div class="flex items-center gap-1">
        <Icon name="edit" title="Updated" />
        <FormattedDate date={metadata.updatedAt} />
      </div>
    )
  }

  {
    metadata.hasSubposts && (
      <div class="flex items-center gap-1">
        <Icon name="subposts" />
        <span>
          {metadata.subpostCount} subpost{metadata.subpostCount === 1 ? "" : "s"}
        </span>
      </div>
    )
  }

  {
    wordCount > 0 && (
      <div class="flex items-center gap-1">
        <Icon name="reading-time" />
        <ReadingTime
          wordCount={isCard ? wordCount : metadata.wordCount}
          combinedWordCount={!isCard ? metadata.combinedWordCount : undefined}
        />
      </div>
    )
  }
</div>
<style>
  #post-metadata > *:not(:first-child)::before {
    content: none;
  }
  @media (min-width: 640px) {
    #post-metadata:not(.meta-card) > *:not(:first-child)::before {
      content: "â€¢";
      margin-inline: 0.25rem;
      display: inline-block;
      vertical-align: middle;
      color: color-mix(in oklch, var(--text-muted-foreground) 50%, transparent);
      pointer-events: none;
    }
  }
</style>
