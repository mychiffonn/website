---
interface Props {
  /** Primary word count to calculate reading time from */
  wordCount: number
  /** Optional combined word count (for posts with subposts) */
  combinedWordCount?: number | null
  /** Custom suffix to append after time (default: "read") */
  customSuffix?: string
  /** Separator between individual and combined reading times (default: " - ") */
  separator?: string
  /** Additional CSS classes */
  class?: string
}

const {
  wordCount,
  combinedWordCount,
  customSuffix = "read",
  separator = " - ",
  class: className
} = Astro.props

// Calculate reading time in minutes (220 words per minute)
const calculateMinutes = (words: number) => Math.max(1, Math.round(words / 220))

const primaryMinutes = calculateMinutes(wordCount)
const primaryDuration = `PT${primaryMinutes}M`

// Format primary reading time
const primaryText = customSuffix ? `${primaryMinutes} min ${customSuffix}` : `${primaryMinutes} min`

// Handle combined word count if provided
const combinedData = (() => {
  if (!combinedWordCount || combinedWordCount <= 0 || combinedWordCount <= wordCount) {
    return null
  }

  const combinedMinutes = calculateMinutes(combinedWordCount)
  if (combinedMinutes <= 0) {
    return null
  }

  return {
    duration: `PT${combinedMinutes}M`,
    text: `${combinedMinutes} min total`
  }
})()
---

{
  wordCount > 0 && (
    <span class={className}>
      <time datetime={primaryDuration}>{primaryText}</time>
      {combinedData && (
        <>
          <span>{separator}</span>
          <time datetime={combinedData.duration}>{combinedData.text}</time>
        </>
      )}
    </span>
  )
}
