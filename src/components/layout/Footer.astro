---
import { FOOTER, PROFILE, SITE } from "@site-config"
import Link from "@/components/base/Link.astro"
import EmailLink from "@/components/profile/EmailLink.astro"
import ProfileLinks from "@/components/profile/ProfileLinks.astro"

// Create array of available source links
const sourceLinks = [
  FOOTER.sourceCode ? { href: FOOTER.sourceCode, label: "Source Code" } : null,
  FOOTER.sourceContent ? { href: FOOTER.sourceContent, label: "Source Content" } : null,
  ...FOOTER.footerLinks
].filter(Boolean) as { href: string; label: string }[]
---

<footer class="border-t py-4">
  <div class="text-muted-foreground mx-auto flex max-w-3xl flex-col gap-2 px-4 text-sm">
    <ProfileLinks
      links={PROFILE.links}
      includeLabel={false}
      includeRss={true}
      includeEmail={true}
      class="my-2"
    />

    <span>
      &copy; <span id="current-year"></span>
      {PROFILE.name}. All rights reserved.

      {
        SITE.license && (
          <span>
            Unless otherwise stated, all content is licensed under{" "}
            <Link class="text-foreground" href={SITE.license.href} external>
              {SITE.license.label}
            </Link>
          </span>
        )
      }
    </span>

    {/** Source Links */}
    {
      sourceLinks.length > 0 && (
        <span class="text-xs">
          {sourceLinks.map((link, index) => [
            <Link href={link.href} class="text-muted-foreground" external>
              {link.label}
            </Link>,
            index < sourceLinks.length - 1 && " / "
          ])}
        </span>
      )
    }

    {/** Credits */}
    {
      FOOTER.credits && (
        <span class="text-xs">
          Built with{" "}
          <Link href="https://astro.build/" class="text-foreground" external>
            Astro.js
          </Link>{" "}
          &{" "}
          <Link href="https://ui.shadcn.com/" class="text-foreground" external>
            shadcn/ui
          </Link>
        </span>
      )
    }
  </div>
</footer>

<script>
  const yearElement = document.getElementById("current-year")
  if (yearElement) {
    yearElement.textContent = new Date().getFullYear().toString()
  }
</script>
